# Generated by Django 5.1.7 on 2025-10-26 15:39

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tests', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='answer',
            options={'ordering': ['attempt_id', 'question_id', 'option_single_id']},
        ),
        migrations.AlterUniqueTogether(
            name='answer',
            unique_together={('attempt', 'question', 'option_single')},
        ),
        migrations.AddField(
            model_name='option',
            name='dimension_code',
            field=models.CharField(blank=True, help_text='К какой шкале относится этот вариант (A/B/C/D, STABILITY, D, ...)', max_length=64),
        ),
        migrations.AddField(
            model_name='question',
            name='help_text',
            field=models.TextField(blank=True, help_text="Доп. подсказка пользователю (например: 'оцените КАЖДЫЙ вариант от 0 до 9')"),
        ),
        migrations.AlterField(
            model_name='answer',
            name='attempt',
            field=models.ForeignKey(help_text='К какой попытке относится ответ', on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='tests.attempt'),
        ),
        migrations.AlterField(
            model_name='answer',
            name='option_single',
            field=models.ForeignKey(blank=True, help_text='Какой вариант оценивается / выбран', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers_single', to='tests.option'),
        ),
        migrations.AlterField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(help_text='На какой вопрос даётся этот кусок ответа', on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='tests.question'),
        ),
        migrations.AlterField(
            model_name='answer',
            name='saved_at',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Когда конкретно этот ответ был сохранён'),
        ),
        migrations.AlterField(
            model_name='answer',
            name='text_value',
            field=models.TextField(blank=True, help_text='Значение ответа пользователя (балл 0..9, текст и т.д.)'),
        ),
        migrations.AlterField(
            model_name='attempt',
            name='autosave_ts',
            field=models.DateTimeField(blank=True, help_text='Когда в последний раз делали автосохранение', null=True),
        ),
        migrations.AlterField(
            model_name='attempt',
            name='client_fingerprint_hash',
            field=models.CharField(blank=True, db_index=True, help_text='Хэш браузера/устройства (без ПДн)', max_length=128),
        ),
        migrations.AlterField(
            model_name='attempt',
            name='progress_index',
            field=models.IntegerField(default=0, help_text='Последний полностью сохранённый вопрос (1..N)'),
        ),
        migrations.AlterField(
            model_name='attempt',
            name='started_at',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Когда пользователь начал попытку'),
        ),
        migrations.AlterField(
            model_name='attempt',
            name='status',
            field=models.CharField(choices=[('in_progress', 'В процессе'), ('completed', 'Завершено'), ('aborted', 'Прервано')], default='in_progress', help_text='Текущий статус попытки', max_length=16),
        ),
        migrations.AlterField(
            model_name='attempt',
            name='test',
            field=models.ForeignKey(help_text='Какой тест сейчас проходит пользователь', on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='tests.test'),
        ),
        migrations.AlterField(
            model_name='attempt',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Когда последний раз были изменения в попытке'),
        ),
        migrations.AlterField(
            model_name='option',
            name='order_index',
            field=models.PositiveIntegerField(help_text='Порядок показа варианта внутри вопроса'),
        ),
        migrations.AlterField(
            model_name='option',
            name='question',
            field=models.ForeignKey(help_text='К какому вопросу относится этот вариант', on_delete=django.db.models.deletion.CASCADE, related_name='options', to='tests.question'),
        ),
        migrations.AlterField(
            model_name='option',
            name='text',
            field=models.TextField(help_text='Текст варианта, который видит пользователь'),
        ),
        migrations.AlterField(
            model_name='option',
            name='value',
            field=models.CharField(blank=True, help_text='Машинный код варианта (например TELL_SOLUTION)', max_length=64),
        ),
        migrations.AlterField(
            model_name='option',
            name='weights_json',
            field=models.JSONField(blank=True, default=dict, help_text='JSON с весами по шкалам для линейного подсчёта (например DISC)'),
        ),
        migrations.AlterField(
            model_name='question',
            name='order_index',
            field=models.PositiveIntegerField(help_text="Порядок вопроса в тесте (1..N). Используется для прогресса 'вопрос n из m'"),
        ),
        migrations.AlterField(
            model_name='question',
            name='required',
            field=models.BooleanField(default=True, help_text='Нужно ли обязательно ответить на этот вопрос, чтобы завершить тест'),
        ),
        migrations.AlterField(
            model_name='question',
            name='test',
            field=models.ForeignKey(help_text='К какому тесту относится вопрос', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='tests.test'),
        ),
        migrations.AlterField(
            model_name='question',
            name='text',
            field=models.TextField(help_text='Формулировка ситуации / вопроса / утверждения'),
        ),
        migrations.AlterField(
            model_name='question',
            name='type',
            field=models.CharField(choices=[('single', 'Одиночный выбор'), ('multiple', 'Множественный выбор'), ('scale', 'Шкала / числовой балл'), ('text', 'Свободный ввод')], help_text='Тип вопроса: single / multiple / scale / text', max_length=16),
        ),
        migrations.AlterField(
            model_name='result',
            name='attempt',
            field=models.OneToOneField(help_text='К какой попытке относится этот итог', on_delete=django.db.models.deletion.CASCADE, related_name='result', to='tests.attempt'),
        ),
        migrations.AlterField(
            model_name='result',
            name='computed_at',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Когда мы посчитали результат'),
        ),
        migrations.AlterField(
            model_name='result',
            name='raw_json',
            field=models.JSONField(blank=True, default=dict, help_text='Сырые данные расчёта, чтобы можно было построить диаграмму и восстановить историю'),
        ),
        migrations.AlterField(
            model_name='result',
            name='summary_md',
            field=models.TextField(blank=True, help_text='Текстовый вывод: ведущий стиль/якорь и краткое объяснение'),
        ),
        migrations.AlterField(
            model_name='resultdimension',
            name='code',
            field=models.CharField(help_text="Код шкалы (например 'D', 'A', 'STABILITY', 'ENTREPRENEURSHIP')", max_length=64),
        ),
        migrations.AlterField(
            model_name='resultdimension',
            name='explanation_md',
            field=models.TextField(blank=True, help_text='Объяснение результата по этой шкале (Markdown)'),
        ),
        migrations.AlterField(
            model_name='resultdimension',
            name='level',
            field=models.CharField(blank=True, help_text="Словесный уровень: 'низкий', 'средний', 'высокий' или пусто", max_length=50),
        ),
        migrations.AlterField(
            model_name='resultdimension',
            name='result',
            field=models.ForeignKey(help_text='К какому результату относится эта шкала', on_delete=django.db.models.deletion.CASCADE, related_name='dimensions', to='tests.result'),
        ),
        migrations.AlterField(
            model_name='resultdimension',
            name='score',
            field=models.FloatField(help_text='Числовое значение по этой шкале (сырое или нормированное)'),
        ),
        migrations.AlterField(
            model_name='resultdimension',
            name='title',
            field=models.CharField(help_text="Человекочитаемое имя шкалы (например 'Dominance', 'Поддержка', 'Стабильность')", max_length=200),
        ),
        migrations.AlterField(
            model_name='scoringrule',
            name='rule_payload_json',
            field=models.JSONField(blank=True, default=dict, help_text="Параметры для расчёта и интерпретации: названия шкал, уровни, пороги и т.д. Напр: {'dimension_titles':{'A':'Информирование',...}, 'levels':[{'code':'high','range':[67,999]}], ...}"),
        ),
        migrations.AlterField(
            model_name='scoringrule',
            name='rule_type',
            field=models.CharField(choices=[('linear_weights', 'Линейные веса'), ('sum_by_dimension_code', 'Сумма по шкалам (dimension_code)'), ('lookup_table', 'Таблица соответствий'), ('formula', 'Формула')], help_text='Как считать итог для этого теста', max_length=32),
        ),
        migrations.AlterField(
            model_name='scoringrule',
            name='test',
            field=models.ForeignKey(help_text='Какой тест использует это правило', on_delete=django.db.models.deletion.CASCADE, related_name='scoring_rules', to='tests.test'),
        ),
        migrations.AlterField(
            model_name='sharelink',
            name='attempt',
            field=models.OneToOneField(help_text='Чья попытка доступна по этой ссылке', on_delete=django.db.models.deletion.CASCADE, related_name='share_link', to='tests.attempt'),
        ),
        migrations.AlterField(
            model_name='sharelink',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Когда ссылка была создана'),
        ),
        migrations.AlterField(
            model_name='sharelink',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Если false — ссылка отозвана, результат больше не доступен публично'),
        ),
        migrations.AlterField(
            model_name='sharelink',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Токен публичного доступа /results/<uuid>', unique=True),
        ),
        migrations.AlterField(
            model_name='test',
            name='est_minutes',
            field=models.PositiveIntegerField(default=5, help_text='Оценочное время прохождения в минутах', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddIndex(
            model_name='option',
            index=models.Index(fields=['dimension_code'], name='tests_optio_dimensi_9a9a96_idx'),
        ),
        migrations.RemoveField(
            model_name='answer',
            name='option_ids',
        ),
    ]
